{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-course-saurabhkanauji"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/csv1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "union1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Fact_Sales_1.csv",
						"folderPath": "csvfiles",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "transactional_date",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "payment",
						"type": "String"
					},
					{
						"name": "credit_card",
						"type": "String"
					},
					{
						"name": "loyalty_card",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Union",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Fact_Sales_2.csv",
						"folderPath": "csvfiles",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fact_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Union",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Fact_Sales_1.csv",
						"folderPath": "csvfiles",
						"container": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/factssales1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStorage2",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "Fact_Sales_1.csv",
						"folderPath": "csvfiles",
						"fileSystem": "source"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "transaction_id",
						"type": "String"
					},
					{
						"name": "transactional_date",
						"type": "String"
					},
					{
						"name": "product_id",
						"type": "String"
					},
					{
						"name": "customer_id",
						"type": "String"
					},
					{
						"name": "payment",
						"type": "String"
					},
					{
						"name": "credit_card",
						"type": "String"
					},
					{
						"name": "loyalty_card",
						"type": "String"
					},
					{
						"name": "cost",
						"type": "String"
					},
					{
						"name": "quantity",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sinkpbix')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "storage1_csv",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "csvfile",
						"fileSystem": "destination"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "csv1",
								"type": "DatasetReference"
							},
							"name": "factsales1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText20",
								"type": "DatasetReference"
							},
							"name": "factsales2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText21",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> factsales1",
						"source(output(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> factsales2",
						"factsales1, factsales2 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/csv1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "factssales1",
								"type": "DatasetReference"
							},
							"name": "factsales1"
						},
						{
							"dataset": {
								"referenceName": "DelimitedText22",
								"type": "DatasetReference"
							},
							"name": "factsales2"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText23",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "union1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> factsales1",
						"source(output(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> factsales2",
						"factsales1, factsales2 union(byName: true)~> union1",
						"union1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          transaction_id as string,",
						"          transactional_date as string,",
						"          product_id as string,",
						"          customer_id as string,",
						"          payment as string,",
						"          credit_card as string,",
						"          loyalty_card as string,",
						"          cost as string,",
						"          quantity as string,",
						"          price as string",
						"     ),",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/factssales1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline13')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"factsales1": {},
									"factsales2": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		}
	]
}